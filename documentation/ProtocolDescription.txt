Терминология: 
Сервер - сервер Lotus Domino.
Приложение - iPapka
Документ - документ резолюции, документ на подпись, связанный документ.
Аттачмент - совокупность графических файлов, каждый из которых является страницей аттачмента. Фттачмент относится к документу и создается на сервере.
Файлы - звуковые или графические файлы.Создается в приложении или на сервере.

Предлашается все ошибки разделить на четыре типа:
1. Общая ошибка сервера (нехватка памяти, системные ошибки и тп) (код ответа сервера 50x, содержание ответа произвольное). К этому же типу относятся сетевые ошибки (отсутствие связи и тп)
2. Отсутсвие ресурса (код ответа сервера 404, содержание ответа произвольное)
3. Ошибки форматов данных (код ответа сервера 500, содержание ответа соответствует формату ошибки)
4. Конфликты записи данных на сервер. (код ответа сервера 500, содержание ответа соответствует формату ошибки)


Запись на сервер.

Последовательность записи на сервер:

Запись на сервер производится в последовательности: 
1. записать файлы
2. записать документы

Сценарии поведения приложения по типам ошибок при записи данных на сервер:

1. При ошибках первого типа повторять попытку передачи файла или документа при следующей синхронизации, так как такие ошибки, как правило, устранимы (перезагрузка сервера, например)

2. При отсутствии ресурса, при ДАННОЙ реализации (точка записи на сервер одна) считать, что ошибка устранима и повторять попытку записи при следующей синхронизации. В идеале сервер должен отвечать
{
         errorCode:  2000
         errorMessage: "Ресурс не существует"
}
В этом случае файл или документ уничтожаются.

3. Ошибки третьего типа могут возникнуть при сетевых перебоях (начали закачивать голосовой комментарий, связь прервалась, данные испорчены) или при поврежденных данных на устройстве. Тут имеет смысл повторить передачу при следующей синхронизации и если и тут возникла проблема, то уничтожить данный файл или документ.
Ответ сервера должен в этом случае идти
{
         errorCode:  3000
         errorMessage: "Ошибка преобразования данных"
}

Ошибки такого типа должны протоколироваться на сервере.

4. При конфликтах записи на сервер (к этому относится несоответствие версий закачиваемых файлов, версий документов, документ только на чтение и тп)
Ответ сервера должен в этом случае идти
{
         errorCode:  4000
         errorMessage: "Конфликт записи данных"
}

В этом случае приложение уничтожает данный конкретный файл или документ и перекачивает его с сервера.

Чтение данных с сервера
Процесс синхронизации приложения состоит из 4-х этапов

1. считывание настроек
2. считывание адресной книжки
3. запись данных на сервер
4. считывание документа и его файлов

Сценарии поведения приложения по типам ошибок при чтении данных с сервера.
Тут могут быть только ошибки первого, второго и третьего типов.
При возникновении ЛЮБОЙ ошибки на первом или втором этапах прерывает синхронизацию с уведомлением пользователя о невозможности синхронизации.
При считывании документа или файлов при ошибках второго типа необходимо уничтожить локальный документ вместе со всеми изменениями
При ошибке первого типа необходимо повторить попытку считывания при следующей синхронизации